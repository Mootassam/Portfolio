{"version":3,"sources":["view/shared/form/formErrors.tsx","view/shared/form/items/InputFormItem.tsx","view/shared/form/items/TextAreaFormItem.tsx","view/shared/yup/yupValidation.tsx","view/shared/ButtonSpinner.tsx","view/contact/ContactForm.tsx","modules/contact/form/contactFormSelectors.tsx","view/shared/styles/ContactWrapeer.tsx","view/contact/ContactFormPage.tsx"],"names":["FormErrors","name","errors","touched","isSubmitted","externalErrorMessage","fieldErrors","message","InputFormItem","props","useFormContext","register","formState","placeholder","disabled","errorMessage","id","ref","className","defaultProps","type","required","prototype","PropTypes","string","isRequired","bool","TextAreaFormItem","undefined","yupValidation","label","config","yupChain","yup","nullable","trim","min","max","ButtonSpinner","loading","schema","shape","email","subject","ContactForm","useState","record","initialValues","form","useForm","resolver","yupResolver","mode","defaultValues","onSubmit","handleSubmit","values","Object","keys","forEach","key","setValue","autoFocus","saveLoading","contactFormSelectors","selectSaveLoading","createSelector","state","contact","raw","Boolean","ContactWrapeer","styled","div","ContactFormPage","dispatched","setDispatched","dispatch","useDispatch","useSelector","selectors","useEffect","size","data","actions","doCreate"],"mappings":"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","file":"static/js/6.87cebf26.chunk.js","sourcesContent":["export default class FormErrors {\n  static errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage = null\n  ) {\n    if (externalErrorMessage) {\n      return externalErrorMessage;\n    }\n\n    if (!isSubmitted && !touched[name]) {\n      return null;\n    }\n\n    const fieldErrors = errors[name];\n\n    return (\n      fieldErrors?.[0]?.message || fieldErrors?.message || fieldErrors || null\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"../formErrors\";\nfunction InputFormItem(props) {\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n  const { name, placeholder, disabled, externalErrorMessage } = props;\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n  return (\n    <>\n      <input\n        name={name}\n        id={name}\n        ref={register}\n        placeholder={placeholder}\n        disabled={disabled}\n        className={`form-control ${errorMessage ? \"is-invalid\" : \"\"}\n            `}\n      />\n      <div className='invalid-feedback'>{errorMessage}</div>\n    </>\n  );\n}\nInputFormItem.defaultProps = {\n  type: \"text\",\n  required: false,\n};\nInputFormItem.prototype = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\nexport default InputFormItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFormContext } from \"react-hook-form\";\nimport FormErrors from \"../formErrors\";\n\nfunction TextAreaFormItem(props) {\n  const {\n    register,\n    errors,\n    formState: { touched, isSubmitted },\n  } = useFormContext();\n  const { name, placeholder, required, externalErrorMessage } = props;\n  const errorMessage = FormErrors.errorMessage(\n    name,\n    errors,\n    touched,\n    isSubmitted,\n    externalErrorMessage\n  );\n  return (\n    <>\n      <textarea\n        id={name}\n        name={name}\n        ref={register}\n        placeholder={placeholder || undefined}\n        className={`form-control ${errorMessage ? \"is-invalid\" : \"\"}\n        `}\n      />\n      <div className='invalid-feedback'>{errorMessage}</div>\n    </>\n  );\n}\nTextAreaFormItem.defaultProps = {\n  required: false,\n};\nTextAreaFormItem.prototype = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\nexport default TextAreaFormItem;\n","import * as yup from \"yup\";\n\nconst yupValidation = {\n  string(label, config?) {\n    config = config || {};\n    let yupChain = yup.string().nullable(true).trim().label(label);\n    if (config.required) {\n      yupChain = yupChain.required();\n    }\n    if (config.min || config.min === 0) {\n      yupChain = yupChain.min(config.min);\n    }\n    if (config.max) {\n      yupChain = yupChain.max(config.max);\n    }\n    return yupChain;\n  },\n};\nexport default yupValidation;\n","const ButtonSpinner = (props) => {\n  return props.loading ? (\n    <span className='spinner-border spinner-border-sm'></span>\n  ) : null;\n};\nexport default ButtonSpinner;\n","import React, { useState } from \"react\";\nimport InputFormItem from \"src/view/shared/form/items/InputFormItem\";\nimport TextAreaFormItem from \"src/view/shared/form/items/TextAreaFormItem\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport yupValidation from \"src/view/shared/yup/yupValidation\";\nimport ButtonSpinner from \"../shared/ButtonSpinner\";\nconst schema = yup.object().shape({\n  name: yupValidation.string(\"name\", {\n    required: true,\n  }),\n  email: yupValidation.string(\"email\", {\n    required: true,\n  }),\n  subject: yupValidation.string(\"subject\", {\n    required: true,\n  }),\n  message: yupValidation.string(\"message\", {\n    required: true,\n  }),\n});\nfunction ContactForm(props) {\n  const [initialValues] = useState(() => {\n    const record = props.record || {};\n\n    return {\n      name: record.name,\n      email: record.email,\n      subject: record.subject,\n      message: record.message,\n    };\n  });\n\n  const form = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    defaultValues: initialValues,\n  });\n\n  const onSubmit = (values) => {\n    props.onSubmit(values);\n    Object.keys(initialValues).forEach((key) => {\n      form.setValue(key, initialValues[key]);\n    });\n  };\n\n  return (\n    <FormProvider {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className='php-email-form'>\n        <div className='row'>\n          <div className='col-md-6 form-group'>\n            <InputFormItem\n              name={\"name\"}\n              placeholder={\"Name\"}\n              required={true}\n              autoFocus\n            />\n          </div>\n          <div className='col-md-6 form-group mt-3 mt-md-0'>\n            <InputFormItem\n              name={\"email\"}\n              placeholder={\"Your Email\"}\n              required={true}\n              autoFocus\n            />\n          </div>\n        </div>\n        <div className='form-group mt-3'>\n          <InputFormItem\n            name={\"subject\"}\n            placeholder={\"Subject\"}\n            required={true}\n            autoFocus\n          />\n        </div>\n        <div className='form-group mt-3'>\n          <TextAreaFormItem name={\"message\"} placeholder={\"Message\"} />\n        </div>\n\n        <div className='text-center'>\n          <button type='submit' disabled={props.saveLoading}>\n            <ButtonSpinner loading={props.saveLoading} />\n            Send Message\n          </button>\n        </div>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default ContactForm;\n","import { createSelector } from \"reselect\";\nconst selectRaw = (state) => state.contact.form;\nconst selectSaveLoading = createSelector([selectRaw], (raw) =>\n  Boolean(raw.saveLoading)\n);\nconst contactFormSelectors = {\n  selectSaveLoading,\n};\nexport default contactFormSelectors;\n","import styled from \"styled-components\";\nconst ContactWrapeer = styled.div`\n  .contact .info {\n    width: 100%;\n    background: #fff;\n  }\n\n  .contact .info i {\n    font-size: 20px;\n    color: #795548;\n    float: left;\n    width: 44px;\n    height: 44px;\n    background: #effbf9;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50px;\n    transition: all 0.3s ease-in-out;\n  }\n\n  .contact .info h4 {\n    padding: 0 0 0 60px;\n    font-size: 22px;\n    font-weight: 600;\n    margin-bottom: 5px;\n    color: #222222;\n  }\n\n  .contact .info p {\n    padding: 0 0 0 60px;\n    margin-bottom: 0;\n    font-size: 14px;\n    color: #555555;\n  }\n  contact .info .address,\n  .contact .info .email,\n  .contact .info .phone {\n    margin-top: 10px;\n  }\n\n  .contact .info .email:hover i,\n  .contact .info .address:hover i,\n  .contact .info .phone:hover i {\n    background: #795548;\n    color: #fff;\n  }\n\n  .contact .php-email-form {\n    width: 100%;\n    background: #fff;\n  }\n\n  .contact .php-email-form .form-group {\n    padding-bottom: 8px;\n  }\n\n  .contact .php-email-form .error-message {\n    display: none;\n    color: #fff;\n    background: #ed3c0d;\n    text-align: center;\n    padding: 15px;\n    font-weight: 600;\n  }\n\n  .contact .php-email-form .sent-message {\n    display: none;\n    color: #fff;\n    background: #18d26e;\n    text-align: center;\n    padding: 15px;\n    font-weight: 600;\n  }\n\n  .contact .php-email-form .loading {\n    display: none;\n    background: #fff;\n    text-align: center;\n    padding: 15px;\n  }\n\n  .contact .php-email-form .loading:before {\n    content: \"\";\n    display: inline-block;\n    border-radius: 50%;\n    width: 24px;\n    height: 24px;\n    margin: 0 10px -6px 0;\n    border: 3px solid #18d26e;\n    border-top-color: #eee;\n    -webkit-animation: animate-loading 1s linear infinite;\n    animation: animate-loading 1s linear infinite;\n  }\n\n  .contact .php-email-form input,\n  .contact .php-email-form textarea {\n    border-radius: 4px;\n    box-shadow: none;\n    font-size: 14px;\n  }\n\n  .contact .php-email-form input:focus,\n  .contact .php-email-form textarea:focus {\n    border-color: #795548;\n  }\n\n  .contact .php-email-form input {\n    height: 44px;\n  }\n\n  .contact .php-email-form textarea {\n    padding: 10px 12px;\n  }\n\n  .contact .php-email-form button[type=\"submit\"] {\n    background: #795548;\n    border: 0;\n    padding: 10px 30px 12px 30px;\n    color: #fff;\n    transition: 0.4s;\n    border-radius: 50px;\n  }\n\n  .contact .php-email-form button[type=\"submit\"]:hover {\n    background: #3dc8b7;\n  }\n\n  @-webkit-keyframes animate-loading {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes animate-loading {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  section {\n    padding: 60px 0;\n  }\n\n  .section-bg {\n    background-color: #e7f8f6;\n  }\n\n  .section-title {\n    text-align: center;\n    padding-bottom: 30px;\n  }\n\n  .section-title h2 {\n    font-size: 32px;\n    font-weight: bold;\n    text-transform: uppercase;\n    margin-bottom: 20px;\n    padding-bottom: 20px;\n    position: relative;\n  }\n\n  .section-title h2::after {\n    content: \"\";\n    position: absolute;\n    display: block;\n    width: 50px;\n    height: 3px;\n    background: #795548;\n    bottom: 0;\n    left: calc(50% - 25px);\n  }\n\n  .section-title p {\n    margin-bottom: 0;\n  }\n`;\nexport default ContactWrapeer;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"src/view/contact/ContactForm\";\nimport actions from \"src/modules/contact/form/contactFormActions\";\nimport selectors from \"src/modules/contact/form/contactFormSelectors\";\nimport ContactWrapeer from \"../shared/styles/ContactWrapeer\";\nimport { FaDiscord, FaPhoneAlt, FaMapMarkerAlt } from \"react-icons/fa\";\nimport { MdEmail } from \"react-icons/md\";\n\nfunction ContactFormPage() {\n  const [dispatched, setDispatched] = useState(false);\n  const dispatch = useDispatch();\n  const saveLoading = useSelector(selectors.selectSaveLoading);\n  useEffect(() => {\n    setDispatched(true);\n  }, [dispatch]);\n  const doSubmit = (data) => {\n    dispatch(actions.doCreate(data));\n  };\n  return (\n    <ContactWrapeer>\n      <section id='contact' className='contact'>\n        <div className='container' data-aos='fade-up'>\n          <div className='section-title'>\n            <h2>Contact</h2>\n            <p>\n              Whether it's an idea or a question, contact us to find out how we\n              can help you! And if you are in Tunis, we'll discuss it over\n              coffee! .\n            </p>\n          </div>\n\n          {/* <div>\n      <iframe style=\"border:0; width: 100%; height: 270px;\" src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d12097.433213460943!2d-74.0062269!3d40.7101282!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0xb89d1fe6bc499443!2sDowntown+Conference+Center!5e0!3m2!1smk!2sbg!4v1539943755621\" frameborder=\"0\" allowfullscreen></iframe>\n    </div> */}\n\n          <div className='row mt-5'>\n            <div className='col-lg-4'>\n              <div className='info'>\n                <FaMapMarkerAlt size={30} />\n                <div className='address'>\n                  <h4>Location:</h4>\n                  <p>Tunis</p>\n                </div>\n\n                <div className='email'>\n                  <MdEmail size={30} />\n                  <h4>Email:</h4>\n                  <p>mootassame@gmail.com</p>\n                </div>\n\n                <div className='phone'>\n                  <FaPhoneAlt size={30} />\n                  <h4>Call:</h4>\n                  <p>+216 55.324.424</p>\n                </div>\n              </div>\n            </div>\n\n            <div className='col-lg-8 mt-5 mt-lg-0'>\n              {dispatched && (\n                <ContactForm saveLoading={saveLoading} onSubmit={doSubmit} />\n              )}\n            </div>\n          </div>\n        </div>\n      </section>\n    </ContactWrapeer>\n  );\n}\n\nexport default ContactFormPage;\n"],"sourceRoot":""}